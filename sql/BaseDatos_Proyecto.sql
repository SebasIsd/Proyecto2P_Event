CREATE TYPE tipo_carrera AS ENUM (
    'Ing. Software', 
    'Ing. Industrial', 
    'Ing. Tecnologías de la Información', 
    'Ing. Telecomunicaciones', 
    'Ing. en Automatización y Robótica'
);

CREATE TYPE tipo_modalidad AS ENUM ('Gratis', 'Pagado');

CREATE TYPE estado_pago AS ENUM ('Pendiente', 'Pagado');

CREATE TYPE asistencia_enum AS ENUM ('Presente', 'Ausente');


CREATE TABLE ROLES (
    ID_ROL SERIAL PRIMARY KEY,
    NOM_ROL VARCHAR(100),
    DES_ROL TEXT
);


CREATE TABLE USUARIOS (
    CED_USU VARCHAR(20) PRIMARY KEY,
    NOM_PRI_USU VARCHAR(100) NOT NULL,
    NOM_SEG_USU VARCHAR(100) NOT NULL,
    APE_PRI_USU VARCHAR(100) NOT NULL,
    APE_SEG_USU VARCHAR(100) NOT NULL,
    COR_USU VARCHAR(255) NOT NULL UNIQUE,
    PAS_USU VARCHAR(255) NOT NULL,
    TEL_USU VARCHAR(20) NOT NULL,
    DIR_USU VARCHAR(200) NOT NULL,
    FEC_NAC_USU DATE NOT NULL,
    ID_ROL_USU INT,
    CAR_USU tipo_carrera,
    FOREIGN KEY (ID_ROL_USU) REFERENCES ROLES(ID_ROL)
);


CREATE TABLE EVENTOS_CURSOS (
    ID_EVE_CUR SERIAL PRIMARY KEY,
    TIT_EVE_CUR VARCHAR(100) NOT NULL,
    DES_EVE_CUR TEXT,
    FEC_INI_EVE_CUR DATE NOT NULL,
    FEC_FIN_EVE_CUR DATE NOT NULL,
    COS_EVE_CUR DECIMAL(10,2) NOT NULL,
    MOD_EVE_CUR tipo_modalidad NOT NULL,
    ID_TIPO_EVE 
    FOREIGN KEY (ID_TIPO_EVE) REFERENCES TIPOS_EVENTO(ID_TIPO_EVE) ON DELETE RESTRICT
);

	


CREATE TABLE INSCRIPCIONES (
    ID_INS SERIAL PRIMARY KEY,
    CED_USU VARCHAR(20) NOT NULL,
    ID_EVE_CUR INT NOT NULL,
    FEC_INI_INS DATE NOT NULL,
    FEC_CIE_INS DATE NOT NULL,
    EST_PAG_INS estado_pago NOT NULL,
    FOREIGN KEY (CED_USU) REFERENCES USUARIOS(CED_USU),
    FOREIGN KEY (ID_EVE_CUR) REFERENCES EVENTOS_CURSOS(ID_EVE_CUR)
);

CREATE TABLE PAGOS (
    ID_PAG SERIAL PRIMARY KEY,
    ID_INS INT NOT NULL,
    FEC_PAG DATE NOT NULL,
    MON_PAG DECIMAL(10,2) NOT NULL,
    MET_PAG VARCHAR(50) NOT NULL,
    FOREIGN KEY (ID_INS) REFERENCES INSCRIPCIONES(ID_INS)
);


CREATE TABLE NOTAS_ASISTENCIAS (
    ID_NOT_ASI SERIAL PRIMARY KEY,
    ID_INS INT NOT NULL,
    NOT_FIN_NOT_ASI DECIMAL(5,2),
    FOREIGN KEY (ID_INS) REFERENCES INSCRIPCIONES(ID_INS),
    PORC_ASI_NOT_ASI INT 
);


CREATE TABLE CERTIFICADOS (
    ID_CER SERIAL PRIMARY KEY,
    ID_INS INT NOT NULL,
    FEC_EMI_CER DATE NOT NULL,
    HTML_GENERADO TEXT,
    FOREIGN KEY (ID_INS) REFERENCES INSCRIPCIONES(ID_INS),
    FOREIGN KEY (ID_PLAN_CER) REFERENCES PLANTILLAS_CERTIFICADOS(ID_PLAN_CER)
);


CREATE TABLE IMAGENES (
    ID_IMG SERIAL PRIMARY KEY,
    ID_INS INT NOT NULL,
    COMPROBANTE_PAG_OID OID,
    FOREIGN KEY (ID_INS) REFERENCES INSCRIPCIONES(ID_INS)
);

CREATE TABLE TIPOS_EVENTO (
    ID_TIPO_EVE SERIAL PRIMARY KEY,
    NOM_TIPO_EVE VARCHAR(100) UNIQUE NOT NULL,
	IMG_TIPO_EVE VARCHAR(255);

);

-- Tabla: CARRERAS (Catálogo si deseas usar como tabla en lugar del ENUM)
CREATE TABLE CARRERAS (
    ID_CAR SERIAL PRIMARY KEY,
    NOM_CAR tipo_carrera UNIQUE NOT NULL
);

-- Relación muchos-a-muchos entre eventos y carreras
CREATE TABLE EVENTOS_CARRERAS (
    ID_EVE_CUR INT NOT NULL,
    ID_CAR INT NOT NULL,
    PRIMARY KEY (ID_EVE_CUR, ID_CAR),
    FOREIGN KEY (ID_EVE_CUR) REFERENCES EVENTOS_CURSOS(ID_EVE_CUR) ON DELETE CASCADE,
    FOREIGN KEY (ID_CAR) REFERENCES CARRERAS(ID_CAR) ON DELETE CASCADE
);

-- Catálogo de requisitos posibles (nombre y descripción)
CREATE TABLE REQUISITOS (
    ID_REQ SERIAL PRIMARY KEY,
    NOM_REQ VARCHAR(100) UNIQUE NOT NULL,
    DES_REQ TEXT
);
CREATE TABLE EVENTOS_REQUISITOS (
    ID_EVE_CUR INT NOT NULL,
    ID_REQ INT NOT NULL,
    VALOR_REQ VARCHAR(100), -- ← Ya no es NOT NULL
    PRIMARY KEY (ID_EVE_CUR, ID_REQ),
    FOREIGN KEY (ID_EVE_CUR) REFERENCES EVENTOS_CURSOS(ID_EVE_CUR) ON DELETE CASCADE,
    FOREIGN KEY (ID_REQ) REFERENCES REQUISITOS(ID_REQ) ON DELETE CASCADE
);


CREATE TABLE EVENTOS_FAVORITOS (
    ID_EVE_CUR INT PRIMARY KEY,
    FECHA_MARCADO TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_EVE_CUR) REFERENCES EVENTOS_CURSOS(ID_EVE_CUR) ON DELETE CASCADE
);


CREATE TABLE EVIDENCIAS_REQUISITOS (
    ID_EVID SERIAL PRIMARY KEY,
    ID_INS INT NOT NULL,
    ID_REQ INT NOT NULL,
    ARCHIVO_OID OID, -- PDF u otro documento
    ESTADO_VALIDACION VARCHAR(20) DEFAULT 'Pendiente', -- 'Pendiente', 'Aprobado', 'Rechazado'
    OBSERVACION TEXT,
    FECHA_SUBIDA TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_INS) REFERENCES INSCRIPCIONES(ID_INS),
    FOREIGN KEY (ID_REQ) REFERENCES REQUISITOS(ID_REQ)
);